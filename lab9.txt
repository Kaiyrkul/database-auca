PS C:\Users\User> & "C:\Program Files\PostgreSQL\17\bin\psql.exe" -h localhost -p 5432 -U postgres -d postgres
Пароль пользователя postgres:

psql (17.6)
ПРЕДУПРЕЖДЕНИЕ: Кодовая страница консоли (65001) отличается от основной
                страницы Windows (1251).
                8-битовые (русские) символы могут отображаться некорректно.
                Подробнее об этом смотрите документацию psql, раздел
                "Notes for Windows users".
Введите "help", чтобы получить справку.

postgres=# DROP TABLE IF EXISTS student_enrollments;
ЗАМЕЧАНИЕ:  таблица "student_enrollments" не существует, пропускается
DROP TABLE
postgres=# DROP TABLE IF EXISTS students CASCADE;
DROP TABLE
postgres=# DROP TABLE IF EXISTS courses CASCADE;
ЗАМЕЧАНИЕ:  таблица "courses" не существует, пропускается
DROP TABLE
postgres=# CREATE TABLE students (
postgres(#     student_id SERIAL PRIMARY KEY,
postgres(#     first_name VARCHAR (50) NOT NULL,
postgres(#     last_name VARCHAR (50) NOT NULL,
postgres(#     email VARCHAR (100) UNIQUE,
postgres(#     enrollment_date DATE DEFAULT CURRENT_DATE
postgres(# );
CREATE TABLE
postgres=# CREATE TABLE courses (
postgres(#     course_id SERIAL PRIMARY KEY,
postgres(#     course_code VARCHAR(10) UNIQUE NOT NULL,
postgres(#     course_name VARCHAR(100) NOT NULL,
postgres(#     credits INTEGER NOT NULL,
postgres(#     instructor VARCHAR (100)
postgres(# );
CREATE TABLE
postgres=# \d students
                                                            "public.students"
                 |                        |                    |              NULL |                             
-----------------+------------------------+--------------------+-------------------+----------------------------------------------
 student_id      | integer                |                    | not null          | nextval('students_student_id_seq'::regclass)
 first_name      | character varying(50)  |                    | not null          |
 last_name       | character varying(50)  |                    | not null          |
 email           | character varying(100) |                    |                   |
 enrollment_date | date                   |                    |                   | CURRENT_DATE
    "students_pkey" PRIMARY KEY, btree (student_id)
    "students_email_key" UNIQUE CONSTRAINT, btree (email)


postgres=# \d courses
                                                          "public.courses"
             |                        |                    |              NULL |                            
-------------+------------------------+--------------------+-------------------+--------------------------------------------
 course_id   | integer                |                    | not null          | nextval('courses_course_id_seq'::regclass)
 course_code | character varying(10)  |                    | not null          |
 course_name | character varying(100) |                    | not null          |
 credits     | integer                |                    | not null          |
 instructor  | character varying(100) |                    |                   |
    "courses_pkey" PRIMARY KEY, btree (course_id)
    "courses_course_code_key" UNIQUE CONSTRAINT, btree (course_code)


postgres=# CREATE TABLE student_enrollments (
postgres(#     enrollment_id SERIAL PRIMARY KEY,
postgres(#     student_id INTEGER NOT NULL,
postgres(#     course_id INTEGER NOT NULL,
postgres(#     enrollment_date DATE DEFAULT CURRENT_DATE,
postgres(#     grade CHAR (2),
postgres(#
postgres(#     -- Внешние ключи, связывающие с родительскими таблицами
postgres(#     FOREIGN KEY (student_id) REFERENCES students (student_id) ON DELETE CASCADE,
postgres(#     FOREIGN KEY (course_id) REFERENCES courses (course_id) ON DELETE CASCADE,
postgres(#
postgres(#     -- Ограничение, запрещающее студенту дважды записаться на один и тот же курс
postgres(#     UNIQUE (student_id, course_id)
postgres(# );
CREATE TABLE
postgres=# \d student_enrollments
                                                         "public.student_enrollments"
                 |              |                    |              NULL |                                    
-----------------+--------------+--------------------+-------------------+------------------------------------------------------------
 enrollment_id   | integer      |                    | not null          | nextval('student_enrollments_enrollment_id_seq'::regclass)
 student_id      | integer      |                    | not null          |
 course_id       | integer      |                    | not null          |
 enrollment_date | date         |                    |                   | CURRENT_DATE
 grade           | character(2) |                    |                   |
    "student_enrollments_pkey" PRIMARY KEY, btree (enrollment_id)
    "student_enrollments_student_id_course_id_key" UNIQUE CONSTRAINT, btree (student_id, course_id)
    "student_enrollments_course_id_fkey" FOREIGN KEY (course_id) REFERENCES courses(course_id) ON DELETE CASCADE
    "student_enrollments_student_id_fkey" FOREIGN KEY (student_id) REFERENCES students(student_id) ON DELETE CASCADE


postgres=# INSERT INTO students (first_name, last_name, email) VALUES
postgres-# ('Alice', 'Johnson', 'alice@university.edu'),
postgres-# ('Bob', 'Smith', 'bob@university.edu'),
postgres-# ('Carol', 'Wilson', 'carol@university.edu');
INSERT 0 3
postgres=# INSERT INTO courses (course_code, course_name, credits, instructor) VALUES
postgres-# ('CS101', 'Introduction to Programming', 3, 'Dr. Brown'),
postgres-# ('CS201', 'Data Structures', 4, 'Dr. Davis'),
postgres-# ('MATH101', 'Calculus I', 4, 'Dr. Wilson');
INSERT 0 3
postgres=# INSERT INTO student_enrollments (student_id, course_id, grade) VALUES
postgres-# (1, 1, 'A'),   -- Alice в CS101
postgres-# (1, 2, 'B+'),  -- Alice в CS201
postgres-# (2, 1, 'A-'),  -- Bob в CS101
postgres-# (2, 3, 'B'),   -- Bob в MATH101
postgres-# (3, 2, 'A'),   -- Carol в CS201
postgres-# (3, 3, 'A-');  -- Carol в MATH101
INSERT 0 6
postgres=# UPDATE student_enrollments
postgres-# SET grade = 'A+'
postgres-# WHERE student_id = 1 AND course_id = 2; -- Alice получила A+ за CS201
UPDATE 1
postgres=# DELETE FROM students
postgres-# WHERE first_name = 'Bob';
DELETE 1
postgres=# SELECT
postgres-#     s.first_name || ' ' || s.last_name AS student_name, -- Объединение имени и фамилии
postgres-#     c.course_code,
postgres-#     c.course_name,
postgres-#     se.grade
postgres-# FROM students s
postgres-# JOIN student_enrollments se ON s.student_id = se.student_id
postgres-# JOIN courses c ON se.course_id = c.course_id
postgres-# ORDER BY s.last_name, c.course_code;
 student_name  | course_code |         course_name         | grade
---------------+-------------+-----------------------------+-------
 Alice Johnson | CS101       | Introduction to Programming | A
 Alice Johnson | CS201       | Data Structures             | A+
 Carol Wilson  | CS201       | Data Structures             | A
 Carol Wilson  | MATH101     | Calculus I                  | A-


postgres=# \q
PS C:\Users\User>