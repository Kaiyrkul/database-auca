PS C:\Users\User> chcp 65001
Active code page: 65001
PS C:\Users\User> & "C:\Program Files\PostgreSQL\17\bin\psql.exe" -h localhost -p 5432 -U postgres -d postgres
Пароль пользователя postgres:

psql (17.6)
ПРЕДУПРЕЖДЕНИЕ: Кодовая страница консоли (65001) отличается от основной
                страницы Windows (1251).
                8-битовые (русские) символы могут отображаться некорректно.
                Подробнее об этом смотрите документацию psql, раздел
                "Notes for Windows users".
Введите "help", чтобы получить справку.

postgres=# DROP TABLE IF EXISTS students;
DROP TABLE
postgres=# CREATE TABLE students (
postgres(#     student_id INTEGER PRIMARY KEY,
postgres(#     name VARCHAR(100),
postgres(#     email VARCHAR(150)
postgres(# );
CREATE TABLE
postgres=# ALTER TABLE students ADD CONSTRAINT pk_students PRIMARY KEY (student_id);
ОШИБКА:  таблица "students" не может иметь несколько первичных ключей
postgres=# DROP TABLE IF EXISTS students;
DROP TABLE
postgres=# CREATE TABLE students (
postgres(#     student_id SERIAL PRIMARY KEY,
postgres(#     name VARCHAR(100) NOT NULL,
postgres(#     email VARCHAR(150) UNIQUE,
postgres(#     faculty VARCHAR(50)
postgres(# );
CREATE TABLE
postgres=#
postgres=# -- Insert sample data
postgres=# INSERT INTO students (name, email, faculty) VALUES
postgres-# ('Alice Johnson', 'alice@alatoo.edu.kg', 'Computer Science'),
postgres-# ('Bob Smith', 'bob@alatoo.edu.kg', 'Mathematics'),
postgres-# ('Carol Davis', 'carol@alatoo.edu.kg', 'Computer Science');
INSERT 0 3
postgres=# CREATE TABLE course_enrollments (
postgres(#     student_id INTEGER,
postgres(#     course_id INTEGER,
postgres(#     semester VARCHAR(20),
postgres(#     enrollment_date DATE DEFAULT CURRENT_DATE,
postgres(#     grade CHAR(2),
postgres(#     PRIMARY KEY (student_id, course_id, semester)
postgres(# );
CREATE TABLE
postgres=#
postgres=# -- Insert sample data
postgres=# INSERT INTO course_enrollments (student_id, course_id, semester, grade) VALUES
postgres-# (1, 101, '2024-Spring', 'A'),
postgres-# (1, 102, '2024-Spring', 'B+'),
postgres-# (2, 101, '2024-Spring', 'A-'),
postgres-# (1, 101, '2024-Fall', 'A+');  -- Same student can take same course in different semester
INSERT 0 4
postgres=# CREATE TABLE products (
postgres(#     product_id SERIAL PRIMARY KEY,
postgres(#     product_name VARCHAR(100) NOT NULL,
postgres(#     price DECIMAL(10,2)
postgres(# );
CREATE TABLE
postgres=# CREATE TABLE transactions (
postgres(#     transaction_id BIGSERIAL PRIMARY KEY,  -- Can handle very large numbers
postgres(#     amount DECIMAL(15,2),
postgres(#     transaction_date TIMESTAMP DEFAULT CURRENT_TIMESTAMP
postgres(# );
CREATE TABLE
postgres=#
postgres=# CREATE TABLE orders (
postgres(#     order_id INTEGER GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
postgres(#     customer_name VARCHAR(100),
postgres(#     order_date DATE DEFAULT CURRENT_DATE
postgres(# );
CREATE TABLE
postgres=#
postgres=# -- IDENTITY BY DEFAULT - Allows manual insertion but auto-generates if not provided
postgres=# CREATE TABLE customers (
postgres(#     customer_id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
postgres(#     customer_name VARCHAR(100),
postgres(#     email VARCHAR(150)
postgres(# );
CREATE TABLE
postgres=#
postgres=# -- You can still insert specific values with BY DEFAULT
postgres=# INSERT INTO customers (customer_id, customer_name, email)
postgres-# VALUES (1000, 'VIP Customer', 'vip@example.com');
INSERT 0 1
postgres=# CREATE TABLE departments (
postgres(#     dept_id INTEGER PRIMARY KEY,
postgres(#     dept_name VARCHAR(100)
postgres(# );
CREATE TABLE
postgres=#
postgres=# -- This will fail due to duplicate primary key
postgres=# INSERT INTO departments VALUES (1, 'Computer Science');
INSERT 0 1
postgres=# INSERT INTO departments VALUES (1, 'Mathematics'); -- ERROR: duplicate key value
ОШИБКА:  повторяющееся значение ключа нарушает ограничение уникальности "departments_pkey"
ПОДРОБНОСТИ:  Ключ "(dept_id)=(1)" уже существует.
postgres=# -- This will fail because primary key cannot be NULL
postgres=# INSERT INTO departments VALUES (NULL, 'Physics'); -- ERROR: null value in column "dept_id"
ОШИБКА:  значение NULL в столбце "dept_id" отношения "departments" нарушает ограничение NOT NULL
ПОДРОБНОСТИ:  Ошибочная строка содержит (null, Physics).
postgres=# \q